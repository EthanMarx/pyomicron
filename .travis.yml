language: generic

env:
  global:
    - CONDA_PKGS_DIRS="${HOME}/.cache/conda/pkgs"

matrix:
  fast_finish: true

  include:
    - os: linux
      env: PYTHON_VERSION="3.6"
    - os: linux
      env: PYTHON_VERSION="3.7"
    # -- disabled until we can install htcondor on osx
    #- os: osx
    #  env: PYTHON_VERSION="3.6"
    #- os: osx
    #  env: PYTHON_VERSION="3.7"

before_install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh;
    else
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - source "${HOME}/miniconda/etc/profile.d/conda.sh"
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - travis_retry conda update --quiet --yes conda
  - conda info --all

install:
  # create a conda environment including our requirements
  - travis_retry conda env create --quiet --name pyomicron --file requirements.yml
  - travis_retry conda activate pyomicron
  # install testing dependencies with conda
  - travis_retry conda install --quiet --yes --update-deps --name pyomicron
        flake8
        flake8-colors
        pip
        pytest-cov
        setuptools
  # install this version
  - python -m pip install --editable .

script:
  - "python -m flake8 --format='${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s' .  bin/*"
  - python -m pytest --verbose --cov --pyargs omicron
  - python -m coverage run -a $(which omicron-print) --help
  - python -m coverage run -a $(which omicron-process) --help
  - python -m coverage run -a $(which omicron-status) --help
  - python -m coverage run -a $(which omicron-hdf5-merge) --help

after_success:
  - travis_retry conda install --quiet --yes --name pyomicron codecov
  - python -m coverage report
  - python -m codecov --flags $(uname) python${PYTHON_VERSION/./}

before_cache:
  - conda clean --quiet --yes --all
  - rm -f $HOME/.cache/pip/log/debug.log
cache:
  pip: true
  directories:
    - ${HOME}/.cache/conda/pkgs
